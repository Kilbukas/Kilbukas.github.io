"use strict";(self.webpackChunklotj_docs=self.webpackChunklotj_docs||[]).push([[37],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>c});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),d=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=d(e.components);return n.createElement(o.Provider,{value:t},e.children)},u="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=d(a),m=r,c=u["".concat(o,".").concat(m)]||u[m]||k[m]||l;return a?n.createElement(c,i(i({ref:t},s),{},{components:a})):n.createElement(c,i({ref:t},s))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=m;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p[u]="string"==typeof e?e:r,i[1]=p;for(var d=2;d<l;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},4:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>k,frontMatter:()=>l,metadata:()=>p,toc:()=>d});var n=a(7462),r=(a(7294),a(3905));const l={},i="API",p={unversionedId:"Datapad/API",id:"Datapad/API",title:"API",description:"Datapad is a class that represents a player's datapad. It can be used to access the datapad's usual functions through lua. That means you can write self-modifying scripts, among other exciting things.",source:"@site/docs/Datapad/API.md",sourceDirName:"Datapad",slug:"/Datapad/API",permalink:"/docs/Datapad/API",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"coreApiSidebar",previous:{title:"Datapad",permalink:"/docs/category/datapad"},next:{title:"Examples",permalink:"/docs/Datapad/Examples"}},o={},d=[{value:"getCapacity",id:"getcapacity",level:2},{value:"Example",id:"example",level:3},{value:"getFreeSpace",id:"getfreespace",level:2},{value:"Example",id:"example-1",level:3},{value:"getDiskCount",id:"getdiskcount",level:2},{value:"isFull",id:"isfull",level:2},{value:"Example",id:"example-2",level:3},{value:"isLocked",id:"islocked",level:2},{value:"hasBiometrics",id:"hasbiometrics",level:2},{value:"isReceiving",id:"isreceiving",level:2},{value:"canReceive",id:"canreceive",level:2},{value:"setReceiveMode",id:"setreceivemode",level:2},{value:"getDisk",id:"getdisk",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Example",id:"example-3",level:3},{value:"disks",id:"disks",level:2},{value:"newDisk",id:"newdisk",level:2},{value:"Parameters",id:"parameters-1",level:3},{value:"Example",id:"example-4",level:3},{value:"deleteDisk",id:"deletedisk",level:2},{value:"Parameters",id:"parameters-2",level:3},{value:"Example",id:"example-5",level:3},{value:"ejectDisk",id:"ejectdisk",level:2},{value:"Parameters",id:"parameters-3",level:3},{value:"Example",id:"example-6",level:3}],s={toc:d},u="wrapper";function k(e){let{components:t,...a}=e;return(0,r.kt)(u,(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"api"},"API"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Datapad")," is a class that represents a player's datapad. It can be used to access the datapad's usual functions through lua. That means you can write self-modifying scripts, among other exciting things."),(0,r.kt)("p",null,"A good number of datapad functions deal with the ",(0,r.kt)("inlineCode",{parentName:"p"},"Note")," structure, which looks like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'{\n    name = "Glup Shitto",\n    text = "&OI\'d like to join the Rebellion.\\r\\n &YYou can contact me on channel &k420&k, encryption &k69&k.",\n    subject = "Rebel Recruitment",\n    to = "@50963",\n}\n')),(0,r.kt)("h2",{id:""}),(0,r.kt)("h2",{id:"getcapacity"},"getCapacity"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Datapad.getCapacity()")," returns the maximum number of notes your datapad can hold."),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"return Datapad.getCapacity()\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"dataprog")," Output, using a MSTR datapad:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"You boot program '(no subject)' on your datapad.\nProgram finished. Result: 35\n")),(0,r.kt)("h2",{id:"-1"}),(0,r.kt)("h2",{id:"getfreespace"},"getFreeSpace"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Datapad.getFreeSpace()")," returns the number of notes your datapad can hold before it is full."),(0,r.kt)("h3",{id:"example-1"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"return Datapad.getFreeSpace()\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"dataprog")," Output, using a MSTR datapad with 3 notes:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"You boot program '(no subject)' on your datapad.\nProgram finished. Result: 32\n")),(0,r.kt)("h2",{id:"-2"}),(0,r.kt)("h2",{id:"getdiskcount"},"getDiskCount"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Datapad.getDiskCount()")," returns the number of disks your datapad currently holds."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"return Datapad.getDiskCount()\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"dataprog")," Output, using a MSTR datapad with 3 disks:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"You boot program '(no subject)' on your datapad.\nProgram finished. Result: 3\n")),(0,r.kt)("h2",{id:"-3"}),(0,r.kt)("h2",{id:"isfull"},"isFull"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Datapad.isFull()")," returns ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," if your datapad is full, ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," otherwise."),(0,r.kt)("h3",{id:"example-2"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"return Datapad.isFull()\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"dataprog")," Output, using a MSTR datapad with 3 notes:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"You boot program '(no subject)' on your datapad.\nProgram finished. Result: false\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"dataprog")," Output, using a MSTR datapad with 35 notes:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"You boot program '(no subject)' on your datapad.\nProgram finished. Result: true\n")),(0,r.kt)("h2",{id:"-4"}),(0,r.kt)("h2",{id:"islocked"},"isLocked"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Datapad.isLocked()")," returns ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," if your datapad is locked, ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," otherwise."),(0,r.kt)("h2",{id:"-5"}),(0,r.kt)("h2",{id:"hasbiometrics"},"hasBiometrics"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Datapad.hasBiometrics()")," returns ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," if your datapad is biometrically locked, ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," otherwise."),(0,r.kt)("h2",{id:"-6"}),(0,r.kt)("h2",{id:"isreceiving"},"isReceiving"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Datapad.isReceiving()")," returns ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," if your datapad is receiving data, ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," otherwise."),(0,r.kt)("h2",{id:"-7"}),(0,r.kt)("h2",{id:"canreceive"},"canReceive"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Datapad.canReceive()")," returns ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," if your datapad can receive data, ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," otherwise."),(0,r.kt)("h2",{id:"-8"}),(0,r.kt)("h2",{id:"setreceivemode"},"setReceiveMode"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Datapad.setReceiveMode()")," sets your datapad to receive messages."),(0,r.kt)("h2",{id:"-9"}),(0,r.kt)("h2",{id:"getdisk"},"getDisk"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Datapad.getDisk(slot)")," returns the disk in the specified slot."),(0,r.kt)("h3",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"slot")),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"The slot to get the disk from. Has to be a positive number.")))),(0,r.kt)("h3",{id:"example-3"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"-- Dataprog to simply print the text of a disk.\nreturn Datapad.getDisk(tonumber(args)).text\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"dataprog")," Output, using ",(0,r.kt)("inlineCode",{parentName:"p"},"dataprog run 1"),":")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"You boot program '(no subject)' on your datapad.\nProgram finished. Result: -- Dataprog to simply print the text of a disk.\\r\\nreturn Datapad.getDisk(tonumber(args)).text\\r\\n\n")),(0,r.kt)("h2",{id:"-10"}),(0,r.kt)("h2",{id:"disks"},"disks"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Datapad.disks()")," returns all the disks in your datapad."),(0,r.kt)("h2",{id:"-11"}),(0,r.kt)("h2",{id:"newdisk"},"newDisk"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Datapad.newDisk(disk)")," creates a new disk in your datapad."),(0,r.kt)("h3",{id:"parameters-1"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"disk")),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"The disk to create. Has to be a table with the following keys: ",(0,r.kt)("inlineCode",{parentName:"td"},"name"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"text"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"subject"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"to"),".")))),(0,r.kt)("h3",{id:"example-4"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'local disk = {\n    name = "My Disk",\n    text = "This is my disk.",\n    subject = "My Disk",\n    to = "Disk police",\n}\n\nDatapad.newDisk(disk)\n')),(0,r.kt)("h2",{id:"-12"}),(0,r.kt)("h2",{id:"deletedisk"},"deleteDisk"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Datapad.deleteDisk(slot)")," deletes the disk in the specified slot."),(0,r.kt)("h3",{id:"parameters-2"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"slot")),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"The slot to delete the disk from. Has to be a positive number.")))),(0,r.kt)("h3",{id:"example-5"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"-- Deletes the disk in slot provided as argument. Equivalent to `datamem delete <slot>`.\nDatapad.deleteDisk(tonumber(args))\n")),(0,r.kt)("h2",{id:"-13"}),(0,r.kt)("h2",{id:"ejectdisk"},"ejectDisk"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Datapad.ejectDisk(slot)")," ejects the disk in the specified slot."),(0,r.kt)("h3",{id:"parameters-3"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"slot")),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"The slot to eject the disk from. Has to be a positive number with an existing disk.")))),(0,r.kt)("h3",{id:"example-6"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"-- Ejects the disk in slot provided as argument. Equivalent to `datamem eject <slot>`.\nDatapad.ejectDisk(tonumber(args))\n")),(0,r.kt)("h2",{id:"-14"}))}k.isMDXComponent=!0}}]);